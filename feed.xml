<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://qyqsdtc.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://qyqsdtc.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-09-07T08:42:31+00:00</updated><id>https://qyqsdtc.github.io/feed.xml</id><title type="html">Yiqian Qian</title><subtitle>A place to know me and store my genius thoughts. </subtitle><entry><title type="html">C919 All in One for Clash Verge 使用指南</title><link href="https://qyqsdtc.github.io/blog/2024/ClashAllInOne/" rel="alternate" type="text/html" title="C919 All in One for Clash Verge 使用指南"/><published>2024-09-07T00:00:00+00:00</published><updated>2024-09-07T00:00:00+00:00</updated><id>https://qyqsdtc.github.io/blog/2024/ClashAllInOne</id><content type="html" xml:base="https://qyqsdtc.github.io/blog/2024/ClashAllInOne/"><![CDATA[<swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ClashConfig/1-480.webp 480w,/assets/img/ClashConfig/1-800.webp 800w,/assets/img/ClashConfig/1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/ClashConfig/1.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="导入配置步骤" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ClashConfig/2-480.webp 480w,/assets/img/ClashConfig/2-800.webp 800w,/assets/img/ClashConfig/2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/ClashConfig/2.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="节点选择界面" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ClashConfig/3-480.webp 480w,/assets/img/ClashConfig/3-800.webp 800w,/assets/img/ClashConfig/3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/ClashConfig/3.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="测试节点延迟" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ClashConfig/4-480.webp 480w,/assets/img/ClashConfig/4-800.webp 800w,/assets/img/ClashConfig/4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/ClashConfig/4.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="编辑规则" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/ClashConfig/5-480.webp 480w,/assets/img/ClashConfig/5-800.webp 800w,/assets/img/ClashConfig/5-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/ClashConfig/5.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="添加自定义规则" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> <div class="caption"> Clash Verge 使用指南图示 </div> <h1 id="导入配置">导入配置</h1> <p>订阅地址请联系管理员或在通知群中获取。获取后，将其粘贴至 Clash Verge（后称 Clash）软件的 <strong>订阅</strong> 部分：</p> <ol> <li>在 <code class="language-plaintext highlighter-rouge">订阅① - 订阅地址框②</code> 中粘贴订阅地址。</li> <li>点击 <code class="language-plaintext highlighter-rouge">导入③</code>，在下方导入我们提供的配置文件④。</li> <li>点击更新按钮⑤可更新配置文件。</li> </ol> <h1 id="节点选择">节点选择</h1> <p>选中配置文件后，将 Clash 切换到 <strong>代理</strong> 菜单栏。<strong>代理</strong> 分为三种模式 ⓪：</p> <ul> <li><strong>规则</strong>：使用已配置好的规则进行代理（如 bilibili 不翻墙，YouTube 要翻墙）。</li> <li><strong>全局</strong>：所有流量都走代理（翻墙）。</li> <li><strong>直连</strong>：所有流量都不走代理（不翻墙）。</li> </ul> <p>在 <strong>规则</strong> 模式下，可以看到我们提供的 <strong>策略组① ② ③ ④ ⑤ ⑥</strong>。每个策略组中可以包含节点或别的策略组。例如：</p> <ul> <li><code class="language-plaintext highlighter-rouge">YouTube 策略组</code> 选择 <code class="language-plaintext highlighter-rouge">Hightraffic</code></li> <li><code class="language-plaintext highlighter-rouge">Hightraffic</code> 选择 <code class="language-plaintext highlighter-rouge">Hightraffic-sanmao</code></li> <li><code class="language-plaintext highlighter-rouge">Hightraffic-sanmao</code> 选择 <code class="language-plaintext highlighter-rouge">香港-01</code></li> </ul> <p>则 <code class="language-plaintext highlighter-rouge">YouTube 策略组</code> 的流量会顺着策略组走 <code class="language-plaintext highlighter-rouge">香港-01</code> 节点。YouTube 网站已经由预先配置好的规则作为 <code class="language-plaintext highlighter-rouge">YouTube 策略组</code>，因此可以实现正常访问 YouTube。</p> <h2 id="注意">注意</h2> <p>我们目前订购了三家机场的服务，分别是 FASTLink、Sanmao、CF。具体说明如下：</p> <ul> <li><strong>FASTLink</strong> 的节点存在于 <code class="language-plaintext highlighter-rouge">Proxy</code> 策略组中。</li> <li><strong>Sanmao</strong> 和 <strong>CF</strong> 的节点存在于带有关键词 <code class="language-plaintext highlighter-rouge">Hightraffic</code> 的策略组中。</li> </ul> <p><strong>FASTLink</strong> 节点速度好但价格较高，其余两个服务的性价比更高。因此我们推荐：</p> <ul> <li>非视频网站使用 <strong>FASTLink</strong> 节点。</li> <li>视频网站使用 <strong>Sanmao</strong> 或 <strong>CF</strong> 节点。</li> </ul> <p>（目前配置文件只允许国外视频网站使用 Sanmao 或 CF）</p> <h1 id="开始使用">开始使用</h1> <p>在 Clash 软件中，打开 <strong>设置 - 系统设置 - 系统代理</strong> 开关，即可开始使用代理。</p> <h1 id="qa">Q&amp;A</h1> <blockquote> <p><strong>1. 订阅地址导入、更新失败怎么办？</strong></p> </blockquote> <ol> <li>请检查订阅地址是否正确。</li> <li>请检查网络是否正常：将订阅地址复制到浏览器中打开，若能下载则是 Clash 软件问题，可以尝试重启软件或设备；若不能下载检查网络正常之后请联系管理员。</li> </ol> <blockquote> <p><strong>2. 为什么国外网页打开很慢？</strong></p> </blockquote> <ol> <li>请根据网页的 URL 地址确定策略组，如 <code class="language-plaintext highlighter-rouge">youtube.com</code> 是 <code class="language-plaintext highlighter-rouge">YouTube 策略组</code>，<code class="language-plaintext highlighter-rouge">microsoft.com</code> 是 <code class="language-plaintext highlighter-rouge">Microsoft 策略组</code>。没有直接对应策略组的国外网站一般在 <code class="language-plaintext highlighter-rouge">Proxy</code> 策略组中。</li> <li>请根据策略组选择合适的节点。如 <code class="language-plaintext highlighter-rouge">youtube.com</code> 访问慢、卡顿，请在 <code class="language-plaintext highlighter-rouge">YouTube 策略组</code> 中： <ul> <li>点击 <strong>更改测试链接按钮①</strong>。</li> <li>在链接框②中填写 YouTube 网址。</li> <li>点击 <strong>测试按钮③</strong>，查看各个节点的延迟，选择延迟合适的节点即可。</li> </ul> </li> </ol> <blockquote> <p><strong>3. 如何自定义规则，如 bilibili 走代理？</strong></p> </blockquote> <ol> <li> <p>在 <strong>订阅</strong> 中找到想修改的配置文件，右键，点击 <strong>编辑规则</strong>。</p> </li> <li> <p>在弹出的窗口中，选择：</p> <ul> <li><strong>规则类型</strong>：<code class="language-plaintext highlighter-rouge">DOMAIN-SUFFIX</code></li> <li><strong>规则内容</strong>：<code class="language-plaintext highlighter-rouge">bilibili.com</code></li> <li><strong>代理策略</strong>：选择 <code class="language-plaintext highlighter-rouge">Hightraffic</code></li> </ul> <p>点击 <strong>保存</strong> 后，<code class="language-plaintext highlighter-rouge">bilibili.com</code> 的流量会走 <code class="language-plaintext highlighter-rouge">Hightraffic 策略组</code>，该策略组会根据选择好的节点走代理。</p> </li> </ol> <p>在 <strong>规则类型</strong> 中，还可以选择：</p> <ul> <li><code class="language-plaintext highlighter-rouge">DOMAIN</code>：精确匹配域名。</li> <li><code class="language-plaintext highlighter-rouge">DOMAIN-SUFFIX</code>：匹配域名后缀。</li> <li><code class="language-plaintext highlighter-rouge">DOMAIN-KEYWORD</code>：匹配域名关键词。</li> <li><code class="language-plaintext highlighter-rouge">GEOIP</code>：根据地理位置匹配。</li> <li><code class="language-plaintext highlighter-rouge">IP-CIDR</code>：根据 IP 地址段匹配。</li> <li><code class="language-plaintext highlighter-rouge">PROCESS-NAME</code>：根据进程名匹配。</li> </ul> <p>在 <strong>代理策略</strong> 中，可以选择：</p> <ul> <li><code class="language-plaintext highlighter-rouge">DIRECT</code>：直连，不走代理。</li> <li><code class="language-plaintext highlighter-rouge">REJECT</code>：拒绝访问。</li> <li><code class="language-plaintext highlighter-rouge">PASS</code>：跳过，不经过 Clash 代理处理，直接连接网络。</li> </ul> <p>也可以选择配置文件中的策略组，例如 <code class="language-plaintext highlighter-rouge">Proxy</code>、<code class="language-plaintext highlighter-rouge">Hightraffic</code>、<code class="language-plaintext highlighter-rouge">YouTube</code> 等，这些策略组会根据设置好的节点走代理。</p> <blockquote> <p><strong>4. 电脑没网了？</strong></p> </blockquote> <p>一般是因为在Clash中开启了系统代理，这会修改电脑的网络连接的代理设置，但是Clash软件没有开启。请打开Clash软件，或者在电脑的系统设置里面关闭系统代理。</p> <p>否则，请重启Clash软件，或者重启电脑。</p>]]></content><author><name></name></author><category term="QyQ-Tech"/><category term="网络工具"/><category term="Clash"/><category term="VPN"/><category term="代理"/><summary type="html"><![CDATA[Clash Verge：一款功能强大的代理工具]]></summary></entry><entry><title type="html">QyQChat 使用教程</title><link href="https://qyqsdtc.github.io/blog/2024/chat/" rel="alternate" type="text/html" title="QyQChat 使用教程"/><published>2024-09-03T16:00:00+00:00</published><updated>2024-09-03T16:00:00+00:00</updated><id>https://qyqsdtc.github.io/blog/2024/chat</id><content type="html" xml:base="https://qyqsdtc.github.io/blog/2024/chat/"><![CDATA[<p>QyQChat 是一个让墙内的人也能和 AI 愉快的玩耍的项目，目前包括但不限于 OpenAI 和 Claude 的模型，也可添加国内的大模型。</p> <p>首先你需要和管理员开通账号以获取 API Token，然后到 <a href="https://qyqchat.cpolar.cn">QyQChat</a> 用邮箱注册一个账号，之后根据图片提示填入 token 即可使用。</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/QyQChat/register-480.webp 480w,/assets/img/QyQChat/register-800.webp 800w,/assets/img/QyQChat/register-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/QyQChat/register.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="QyQChat 注册页面" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/QyQChat/token-480.webp 480w,/assets/img/QyQChat/token-800.webp 800w,/assets/img/QyQChat/token-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/QyQChat/token.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="填写 API Token" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> 左图：QyQChat 注册页面 | 右图：填写 API Token </div> <p>Enjoy!</p>]]></content><author><name></name></author><category term="QyQ-Tech"/><category term="AI"/><category term="ChatGPT"/><category term="AI"/><summary type="html"><![CDATA[QyQChat：免翻墙版的 ChatGPT]]></summary></entry><entry><title type="html">阿 Q 影音库之 AList 使用教程</title><link href="https://qyqsdtc.github.io/blog/2024/AList/" rel="alternate" type="text/html" title="阿 Q 影音库之 AList 使用教程"/><published>2024-09-03T15:30:00+00:00</published><updated>2024-09-03T15:30:00+00:00</updated><id>https://qyqsdtc.github.io/blog/2024/AList</id><content type="html" xml:base="https://qyqsdtc.github.io/blog/2024/AList/"><![CDATA[<p>首先找管理员创建账号，你会获得一个 http://alist-用户名.drqyq.com 的网址，用户名和密码找管理员获取。</p> <h2 id="网页版">网页版</h2> <p>进入到网页之后，在右上角点击”登录”，输入用户名密码即可登录。</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/AList/login-480.webp 480w,/assets/img/AList/login-800.webp 800w,/assets/img/AList/login-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/AList/login.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="AList 登录页面" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/AList/main-480.webp 480w,/assets/img/AList/main-800.webp 800w,/assets/img/AList/main-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/AList/main.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="主界面" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> 左图：AList 登录页面 | 右图：AList 主界面 </div> <h2 id="webdav-连接">WebDAV 连接</h2> <p>AList 支持 WebDAV 协议，你可以使用支持 WebDAV 的第三方应用来访问 AList 中的文件。例如 VidHub，infuse 等。这里同样以 VidHub 为例：</p> <p>连接信息：</p> <ul> <li>服务器地址：http://alist-用户名.drqyq.com</li> <li>用户名：AList 用户名（需找管理员获取）</li> <li>密码：AList 密码（需找管理员获取）</li> </ul> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/AList/webdav1-480.webp 480w,/assets/img/AList/webdav1-800.webp 800w,/assets/img/AList/webdav1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/AList/webdav1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/AList/webdav2-480.webp 480w,/assets/img/AList/webdav2-800.webp 800w,/assets/img/AList/webdav2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/AList/webdav2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/AList/webdav3-480.webp 480w,/assets/img/AList/webdav3-800.webp 800w,/assets/img/AList/webdav3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/AList/webdav3.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/AList/webdav4-480.webp 480w,/assets/img/AList/webdav4-800.webp 800w,/assets/img/AList/webdav4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/AList/webdav4.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/AList/webdav5-480.webp 480w,/assets/img/AList/webdav5-800.webp 800w,/assets/img/AList/webdav5-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/AList/webdav5.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> <div class="caption"> WebDAV 连接图文教程 </div> <p>如图一所示，在 VidHub 添加文件源里找到 WebDAV 存储，然后按照图二填写，连接成功后会出现图三，添加所有文件。</p> <p><strong>重要❗️重要❗️重要❗️添加完文件后一定要到 <em>设置-&gt;资源</em> 中取消勾选刚刚添加的文件源,如图四所示</strong></p> <p>连接成功后即可在文件源里看到我们刚刚添加的所有文件，点进去即可观看，如图五所示。</p>]]></content><author><name></name></author><category term="阿Q影音库"/><category term="QyQ-Tech"/><category term="AList"/><category term="NAS"/><category term="media-server"/><summary type="html"><![CDATA[如何使用阿 Q 影音库的 AList]]></summary></entry><entry><title type="html">阿 Q 影音库之 Emby 使用教程</title><link href="https://qyqsdtc.github.io/blog/2024/emby/" rel="alternate" type="text/html" title="阿 Q 影音库之 Emby 使用教程"/><published>2024-09-03T10:56:00+00:00</published><updated>2024-09-03T10:56:00+00:00</updated><id>https://qyqsdtc.github.io/blog/2024/emby</id><content type="html" xml:base="https://qyqsdtc.github.io/blog/2024/emby/"><![CDATA[<h1 id="阿-q-影音库-emby-使用教程">阿 Q 影音库 Emby 使用教程。</h1> <p>首先找管理员创建账号，你会获得一个 http://emby-用户名.drqyq.com 的网址和用户名密码，然后使用该地址登录网页版 Emby。</p> <h2 id="网页版">网页版</h2> <p>进入到网页之后，点击<em>手动登录</em>，输入用户名密码即可登录。登录后可自行修改登录密码。</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Emby/%E7%99%BB%E5%BD%95-480.webp 480w,/assets/img/Emby/%E7%99%BB%E5%BD%95-800.webp 800w,/assets/img/Emby/%E7%99%BB%E5%BD%95-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Emby/%E7%99%BB%E5%BD%95.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="Emby 登录页面" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Emby/%E7%99%BB%E5%BD%952-480.webp 480w,/assets/img/Emby/%E7%99%BB%E5%BD%952-800.webp 800w,/assets/img/Emby/%E7%99%BB%E5%BD%952-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Emby/%E7%99%BB%E5%BD%952.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="手动登录" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> 左图：Emby 登录页面 | 右图：点击"手动登录"进行登录 </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Emby/main-480.webp 480w,/assets/img/Emby/main-800.webp 800w,/assets/img/Emby/main-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Emby/main.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="Emby 主界面" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> 登录成功后的 Emby 主界面 </div> <h2 id="emby-客户端">Emby 客户端</h2> <p>可以使用 Emby 官方客户端进行登录。服务器地址填写👆的地址，选择 http 协议，端口填写 8096即可连接。</p> <h2 id="infuse--vidhub">Infuse &amp; VidHub</h2> <p>Infuse 和 VidHub 的连接方式类似，这里以 VidHub 为例：</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Emby/vidhub1-480.webp 480w,/assets/img/Emby/vidhub1-800.webp 800w,/assets/img/Emby/vidhub1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Emby/vidhub1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="VidHub 添加服务器" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Emby/vidhub2-480.webp 480w,/assets/img/Emby/vidhub2-800.webp 800w,/assets/img/Emby/vidhub2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/Emby/vidhub2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="VidHub 连接 Emby" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> 左图：VidHub 添加服务器 | 右图：选择 Emby 并输入服务器地址，用户名和密码进行登陆 </div>]]></content><author><name></name></author><category term="阿Q影音库"/><category term="QyQ-Tech"/><category term="Emby"/><category term="media-server"/><category term="NAS"/><summary type="html"><![CDATA[如何连接阿 Q Emby 影音库]]></summary></entry><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://qyqsdtc.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://qyqsdtc.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://qyqsdtc.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[We’re sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">a post with tabs</title><link href="https://qyqsdtc.github.io/blog/2024/tabs/" rel="alternate" type="text/html" title="a post with tabs"/><published>2024-05-01T00:32:13+00:00</published><updated>2024-05-01T00:32:13+00:00</updated><id>https://qyqsdtc.github.io/blog/2024/tabs</id><content type="html" xml:base="https://qyqsdtc.github.io/blog/2024/tabs/"><![CDATA[<p>This is how a post with <a href="https://github.com/Ovski4/jekyll-tabs">tabs</a> looks like. Note that the tabs could be used for different purposes, not only for code.</p> <h2 id="first-tabs">First tabs</h2> <p>To add tabs, use the following syntax:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">tabs</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-1</span><span class="w"> </span><span class="cp">%}</span>

Content 1

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-2</span><span class="w"> </span><span class="cp">%}</span>

Content 2

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtabs</span><span class="w"> </span><span class="cp">%}</span>
</code></pre></div></div> <p>With this you can generate visualizations like:</p> <ul id="log" class="tab" data-tab="c4bf168d-628f-4fcd-b8a8-17c858cbaf3f" data-name="log"> <li class="active" id="log-php"> <a href="#">php </a> </li> <li id="log-js"> <a href="#">js </a> </li> <li id="log-ruby"> <a href="#">ruby </a> </li> </ul> <ul class="tab-content" id="c4bf168d-628f-4fcd-b8a8-17c858cbaf3f" data-name="log"> <li class="active"> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">var_dump</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">pputs</span> <span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span>
</code></pre></div></div> </li> </ul> <h2 id="another-example">Another example</h2> <ul id="data-struct" class="tab" data-tab="e7b3ca85-67ee-43cf-9b2c-38c93150ac19" data-name="data-struct"> <li class="active" id="data-struct-yaml"> <a href="#">yaml </a> </li> <li id="data-struct-json"> <a href="#">json </a> </li> </ul> <ul class="tab-content" id="e7b3ca85-67ee-43cf-9b2c-38c93150ac19" data-name="data-struct"> <li class="active"> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">hello</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">whatsup"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">hi"</span>
</code></pre></div></div> </li> <li> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"hello"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"whatsup"</span><span class="p">,</span><span class="w"> </span><span class="s2">"hi"</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> </li> </ul> <h2 id="tabs-for-something-else">Tabs for something else</h2> <ul id="something-else" class="tab" data-tab="f6126cca-a0df-4388-8fda-3b7cef46419f" data-name="something-else"> <li class="active" id="something-else-text"> <a href="#">text </a> </li> <li id="something-else-quote"> <a href="#">quote </a> </li> <li id="something-else-list"> <a href="#">list </a> </li> </ul> <ul class="tab-content" id="f6126cca-a0df-4388-8fda-3b7cef46419f" data-name="something-else"> <li class="active"> <p>Regular text</p> </li> <li> <blockquote> <p>A quote</p> </blockquote> </li> <li> <p>Hipster list</p> <ul> <li>brunch</li> <li>fixie</li> <li>raybans</li> <li>messenger bag</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included tabs in a post could look like]]></summary></entry><entry><title type="html">a post with typograms</title><link href="https://qyqsdtc.github.io/blog/2024/typograms/" rel="alternate" type="text/html" title="a post with typograms"/><published>2024-04-29T23:36:10+00:00</published><updated>2024-04-29T23:36:10+00:00</updated><id>https://qyqsdtc.github.io/blog/2024/typograms</id><content type="html" xml:base="https://qyqsdtc.github.io/blog/2024/typograms/"><![CDATA[<p>This is an example post with some <a href="https://github.com/google/typograms/">typograms</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">+----+
|    |---&gt; My first diagram!
+----+</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-typograms">+----+
|    |---&gt; My first diagram!
+----+
</code></pre> <p>Another example:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.</span>
<span class="p">```</span>
</code></pre></div></div> <p>which generates:</p> <pre><code class="language-typograms">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.
</code></pre> <p>For more examples, check out the <a href="https://google.github.io/typograms/#examples">typograms documentation</a>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[this is what included typograms code could look like]]></summary></entry><entry><title type="html">a post that can be cited</title><link href="https://qyqsdtc.github.io/blog/2024/post-citation/" rel="alternate" type="text/html" title="a post that can be cited"/><published>2024-04-28T15:06:00+00:00</published><updated>2024-04-28T15:06:00+00:00</updated><id>https://qyqsdtc.github.io/blog/2024/post-citation</id><content type="html" xml:base="https://qyqsdtc.github.io/blog/2024/post-citation/"><![CDATA[<p>This is an example post that can be cited. The content of the post ends here, while the citation information is automatically provided below. The only thing needed is for you to set the <code class="language-plaintext highlighter-rouge">citation</code> key in the front matter to <code class="language-plaintext highlighter-rouge">true</code>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="citation"/><summary type="html"><![CDATA[this is what a post that can be cited looks like]]></summary></entry><entry><title type="html">a post with pseudo code</title><link href="https://qyqsdtc.github.io/blog/2024/pseudocode/" rel="alternate" type="text/html" title="a post with pseudo code"/><published>2024-04-15T00:01:00+00:00</published><updated>2024-04-15T00:01:00+00:00</updated><id>https://qyqsdtc.github.io/blog/2024/pseudocode</id><content type="html" xml:base="https://qyqsdtc.github.io/blog/2024/pseudocode/"><![CDATA[<p>This is an example post with some pseudo code rendered by <a href="https://github.com/SaswatPadhi/pseudocode.js">pseudocode</a>. The example presented here is the same as the one in the <a href="https://saswat.padhi.me/pseudocode.js/">pseudocode.js</a> documentation, with only one simple but important change: everytime you would use <code class="language-plaintext highlighter-rouge">$</code>, you should use <code class="language-plaintext highlighter-rouge">$$</code> instead. Also, note that the <code class="language-plaintext highlighter-rouge">pseudocode</code> key in the front matter is set to <code class="language-plaintext highlighter-rouge">true</code> to enable the rendering of pseudo code. As an example, using this code:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">pseudocode
</span><span class="sb">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Generates:</p> <pre><code class="language-pseudocode">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included pseudo code could look like]]></summary></entry><entry><title type="html">a post with code diff</title><link href="https://qyqsdtc.github.io/blog/2024/code-diff/" rel="alternate" type="text/html" title="a post with code diff"/><published>2024-01-27T19:22:00+00:00</published><updated>2024-01-27T19:22:00+00:00</updated><id>https://qyqsdtc.github.io/blog/2024/code-diff</id><content type="html" xml:base="https://qyqsdtc.github.io/blog/2024/code-diff/"><![CDATA[<p>You can display diff code by using the regular markdown syntax:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff
</span><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")
</span></code></pre></div></div> <p>But this is difficult to read, specially if you have a large diff. You can use <a href="https://diff2html.xyz/">diff2html</a> to display a more readable version of the diff. For this, just use <code class="language-plaintext highlighter-rouge">diff2html</code> instead of <code class="language-plaintext highlighter-rouge">diff</code> for the code block language:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff2html
</span><span class="sb">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
--- a/sample.js
+++ b/sample.js
@@ -1 +1 @@
-console.log("Hello World!")
+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>If we use a longer example, for example <a href="https://github.com/rtfpessoa/diff2html/commit/c2c253d3e3f8b8b267f551e659f72b44ca2ac927">this commit from diff2html</a>, it will generate the following output:</p> <pre><code class="language-diff2html">From 2aaae31cc2a37bfff83430c2c914b140bee59b6a Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sun, 9 Oct 2016 16:41:54 +0100
Subject: [PATCH 1/2] Initial template override support

---
 scripts/hulk.js                    |  4 ++--
 src/diff2html.js                   |  3 +--
 src/file-list-printer.js           | 11 ++++++++---
 src/hoganjs-utils.js               | 29 +++++++++++++++++------------
 src/html-printer.js                |  6 ++++++
 src/line-by-line-printer.js        |  6 +++++-
 src/side-by-side-printer.js        |  6 +++++-
 test/file-list-printer-tests.js    |  2 +-
 test/hogan-cache-tests.js          | 18 +++++++++++++++---
 test/line-by-line-tests.js         |  3 +--
 test/side-by-side-printer-tests.js |  3 +--
 11 files changed, 62 insertions(+), 29 deletions(-)

diff --git a/scripts/hulk.js b/scripts/hulk.js
index 5a793c18..a4b1a4d5 100755
--- a/scripts/hulk.js
+++ b/scripts/hulk.js
@@ -173,11 +173,11 @@ function namespace(name) {
 // write a template foreach file that matches template extension
 templates = extractFiles(options.argv.remain)
   .map(function(file) {
-    var openedFile = fs.readFileSync(file, 'utf-8');
+    var openedFile = fs.readFileSync(file, 'utf-8').trim();
     var name;
     if (!openedFile) return;
     name = namespace(path.basename(file).replace(/\..*$/, ''));
-    openedFile = removeByteOrderMark(openedFile.trim());
+    openedFile = removeByteOrderMark(openedFile);
     openedFile = wrap(file, name, openedFile);
     if (!options.outputdir) return openedFile;
     fs.writeFileSync(path.join(options.outputdir, name + '.js')
diff --git a/src/diff2html.js b/src/diff2html.js
index 21b0119e..64e138f5 100644
--- a/src/diff2html.js
+++ b/src/diff2html.js
@@ -7,7 +7,6 @@

 (function() {
   var diffParser = require('./diff-parser.js').DiffParser;
-  var fileLister = require('./file-list-printer.js').FileListPrinter;
   var htmlPrinter = require('./html-printer.js').HtmlPrinter;

   function Diff2Html() {
@@ -43,7 +42,7 @@

     var fileList = '';
     if (configOrEmpty.showFiles === true) {
-      fileList = fileLister.generateFileList(diffJson, configOrEmpty);
+      fileList = htmlPrinter.generateFileListSummary(diffJson, configOrEmpty);
     }

     var diffOutput = '';
diff --git a/src/file-list-printer.js b/src/file-list-printer.js
index e408d9b2..1e0a2c61 100644
--- a/src/file-list-printer.js
+++ b/src/file-list-printer.js
@@ -8,11 +8,16 @@
 (function() {
   var printerUtils = require('./printer-utils.js').PrinterUtils;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var baseTemplatesPath = 'file-summary';
   var iconsBaseTemplatesPath = 'icon';

-  function FileListPrinter() {
+  function FileListPrinter(config) {
+    this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   FileListPrinter.prototype.generateFileList = function(diffFiles) {
@@ -38,5 +43,5 @@
     });
   };

-  module.exports.FileListPrinter = new FileListPrinter();
+  module.exports.FileListPrinter = FileListPrinter;
 })();
diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 9949e5fa..0dda08d7 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -8,18 +8,19 @@
 (function() {
   var fs = require('fs');
   var path = require('path');
-
   var hogan = require('hogan.js');

   var hoganTemplates = require('./templates/diff2html-templates.js');

-  var templatesPath = path.resolve(__dirname, 'templates');
+  var extraTemplates;

-  function HoganJsUtils() {
+  function HoganJsUtils(configuration) {
+    this.config = configuration || {};
+    extraTemplates = this.config.templates || {};
   }

-  HoganJsUtils.prototype.render = function(namespace, view, params, configuration) {
-    var template = this.template(namespace, view, configuration);
+  HoganJsUtils.prototype.render = function(namespace, view, params) {
+    var template = this.template(namespace, view);
     if (template) {
       return template.render(params);
     }
@@ -27,17 +28,16 @@
     return null;
   };

-  HoganJsUtils.prototype.template = function(namespace, view, configuration) {
-    var config = configuration || {};
+  HoganJsUtils.prototype.template = function(namespace, view) {
     var templateKey = this._templateKey(namespace, view);

-    return this._getTemplate(templateKey, config);
+    return this._getTemplate(templateKey);
   };

-  HoganJsUtils.prototype._getTemplate = function(templateKey, config) {
+  HoganJsUtils.prototype._getTemplate = function(templateKey) {
     var template;

-    if (!config.noCache) {
+    if (!this.config.noCache) {
       template = this._readFromCache(templateKey);
     }

@@ -53,6 +53,7 @@

     try {
       if (fs.readFileSync) {
+        var templatesPath = path.resolve(__dirname, 'templates');
         var templatePath = path.join(templatesPath, templateKey);
         var templateContent = fs.readFileSync(templatePath + '.mustache', 'utf8');
         template = hogan.compile(templateContent);
@@ -66,12 +67,16 @@
   };

   HoganJsUtils.prototype._readFromCache = function(templateKey) {
-    return hoganTemplates[templateKey];
+    return extraTemplates[templateKey] || hoganTemplates[templateKey];
   };

   HoganJsUtils.prototype._templateKey = function(namespace, view) {
     return namespace + '-' + view;
   };

-  module.exports.HoganJsUtils = new HoganJsUtils();
+  HoganJsUtils.prototype.compile = function(templateStr) {
+    return hogan.compile(templateStr);
+  };
+
+  module.exports.HoganJsUtils = HoganJsUtils;
 })();
diff --git a/src/html-printer.js b/src/html-printer.js
index 585d5b66..13f83047 100644
--- a/src/html-printer.js
+++ b/src/html-printer.js
@@ -8,6 +8,7 @@
 (function() {
   var LineByLinePrinter = require('./line-by-line-printer.js').LineByLinePrinter;
   var SideBySidePrinter = require('./side-by-side-printer.js').SideBySidePrinter;
+  var FileListPrinter = require('./file-list-printer.js').FileListPrinter;

   function HtmlPrinter() {
   }
@@ -22,5 +23,10 @@
     return sideBySidePrinter.generateSideBySideJsonHtml(diffFiles);
   };

+  HtmlPrinter.prototype.generateFileListSummary = function(diffJson, config) {
+    var fileListPrinter = new FileListPrinter(config);
+    return fileListPrinter.generateFileList(diffJson);
+  };
+
   module.exports.HtmlPrinter = new HtmlPrinter();
 })();
diff --git a/src/line-by-line-printer.js b/src/line-by-line-printer.js
index b07eb53c..d230bedd 100644
--- a/src/line-by-line-printer.js
+++ b/src/line-by-line-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'line-by-line';
   var iconsBaseTemplatesPath = 'icon';
@@ -19,6 +20,9 @@

   function LineByLinePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   LineByLinePrinter.prototype.makeFileDiffHtml = function(file, diffs) {
diff --git a/src/side-by-side-printer.js b/src/side-by-side-printer.js
index bbf1dc8d..5e3033b3 100644
--- a/src/side-by-side-printer.js
+++ b/src/side-by-side-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'side-by-side';
   var iconsBaseTemplatesPath = 'icon';
@@ -26,6 +27,9 @@

   function SideBySidePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   SideBySidePrinter.prototype.makeDiffHtml = function(file, diffs) {
diff --git a/test/file-list-printer-tests.js b/test/file-list-printer-tests.js
index a502a46f..60ea3208 100644
--- a/test/file-list-printer-tests.js
+++ b/test/file-list-printer-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var fileListPrinter = require('../src/file-list-printer.js').FileListPrinter;
+var fileListPrinter = new (require('../src/file-list-printer.js').FileListPrinter)();

 describe('FileListPrinter', function() {
   describe('generateFileList', function() {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 190bf6f8..3bb754ac 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var HoganJsUtils = require('../src/hoganjs-utils.js').HoganJsUtils;
+var HoganJsUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)();
 var diffParser = require('../src/diff-parser.js').DiffParser;

 describe('HoganJsUtils', function() {
@@ -21,16 +21,28 @@ describe('HoganJsUtils', function() {
       });
       assert.equal(emptyDiffHtml, result);
     });
+
     it('should render view without cache', function() {
       var result = HoganJsUtils.render('generic', 'empty-diff', {
         contentClass: 'd2h-code-line',
         diffParser: diffParser
       }, {noCache: true});
-      assert.equal(emptyDiffHtml + '\n', result);
+      assert.equal(emptyDiffHtml, result);
     });
+
     it('should return null if template is missing', function() {
-      var result = HoganJsUtils.render('generic', 'missing-template', {}, {noCache: true});
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)({noCache: true});
+      var result = hoganUtils.render('generic', 'missing-template', {});
       assert.equal(null, result);
     });
+
+    it('should allow templates to be overridden', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+
+      var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
diff --git a/test/line-by-line-tests.js b/test/line-by-line-tests.js
index 1cd92073..8869b3df 100644
--- a/test/line-by-line-tests.js
+++ b/test/line-by-line-tests.js
@@ -14,7 +14,7 @@ describe('LineByLinePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expected, fileHtml);
     });
@@ -422,7 +422,6 @@ describe('LineByLinePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                &lt;/tbody&gt;\n' +
         '            &lt;/table&gt;\n' +
         '        &lt;/div&gt;\n' +
diff --git a/test/side-by-side-printer-tests.js b/test/side-by-side-printer-tests.js
index 76625f8e..771daaa5 100644
--- a/test/side-by-side-printer-tests.js
+++ b/test/side-by-side-printer-tests.js
@@ -14,7 +14,7 @@ describe('SideBySidePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expectedRight, fileHtml.right);
       assert.equal(expectedLeft, fileHtml.left);
@@ -324,7 +324,6 @@ describe('SideBySidePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                    &lt;/tbody&gt;\n' +
         '                &lt;/table&gt;\n' +
         '            &lt;/div&gt;\n' +

From f3cadb96677d0eb82fc2752dc3ffbf35ca9b5bdb Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sat, 15 Oct 2016 13:21:22 +0100
Subject: [PATCH 2/2] Allow uncompiled templates

---
 README.md                 |  3 +++
 src/hoganjs-utils.js      |  7 +++++++
 test/hogan-cache-tests.js | 24 +++++++++++++++++++++++-
 3 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 132c8a28..46909f25 100644
--- a/README.md
+++ b/README.md
@@ -98,6 +98,9 @@ The HTML output accepts a Javascript object with configuration. Possible options
   - `synchronisedScroll`: scroll both panes in side-by-side mode: `true` or `false`, default is `false`
   - `matchWordsThreshold`: similarity threshold for word matching, default is 0.25
   - `matchingMaxComparisons`: perform at most this much comparisons for line matching a block of changes, default is `2500`
+  - `templates`: object with previously compiled templates to replace parts of the html
+  - `rawTemplates`: object with raw not compiled templates to replace parts of the html
+  &gt; For more information regarding the possible templates look into [src/templates](https://github.com/rtfpessoa/diff2html/tree/master/src/templates)

 ## Diff2HtmlUI Helper

diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 0dda08d7..b2e9c275 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -17,6 +17,13 @@
   function HoganJsUtils(configuration) {
     this.config = configuration || {};
     extraTemplates = this.config.templates || {};
+
+    var rawTemplates = this.config.rawTemplates || {};
+    for (var templateName in rawTemplates) {
+      if (rawTemplates.hasOwnProperty(templateName)) {
+        if (!extraTemplates[templateName]) extraTemplates[templateName] = this.compile(rawTemplates[templateName]);
+      }
+    }
   }

   HoganJsUtils.prototype.render = function(namespace, view, params) {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 3bb754ac..a34839c0 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -36,7 +36,7 @@ describe('HoganJsUtils', function() {
       assert.equal(null, result);
     });

-    it('should allow templates to be overridden', function() {
+    it('should allow templates to be overridden with compiled templates', function() {
       var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');

       var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
@@ -44,5 +44,27 @@ describe('HoganJsUtils', function() {
       var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
       assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
     });
+
+    it('should allow templates to be overridden with uncompiled templates', function() {
+      var emptyDiffTemplate = '&lt;p&gt;&lt;/p&gt;';
+
+      var config = {rawTemplates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
+
+    it('should allow templates to be overridden giving priority to compiled templates', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+      var emptyDiffTemplateUncompiled = '&lt;p&gt;Not used!&lt;/p&gt;';
+
+      var config = {
+        templates: {'generic-empty-diff': emptyDiffTemplate},
+        rawTemplates: {'generic-empty-diff': emptyDiffTemplateUncompiled}
+      };
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is how you can display code diffs]]></summary></entry></feed>